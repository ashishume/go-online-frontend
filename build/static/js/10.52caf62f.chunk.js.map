{"version":3,"sources":["API/HttpService.jsx","API/ApiPaths.jsx","store/actions/index.jsx","components/CreateMeeting/CreateMeeting.jsx","containers/Meeting.jsx"],"names":["axios","create","baseURL","API_NAME","signIn","formValues","dispatch","a","HttpService","post","response","type","ActionType","payload","data","user","status","localStorage","setItem","_id","name","email","phone","user_plan","containerId","window","location","href","fetchActiveMeetings","query","get","params","fetchInActiveMeetings","createMeeting","body","room","id","history","push","fetchMeetingByRoomId","conference","CreateMeeting","onSubmit","form","getItem","props","state","isPassword","types","value","permanentTypes","accessTypes","renderError","error","touched","className","renderField","htmlFor","input","autoComplete","meta","renderPassword","renderRoomType","map","key","renderPermanentRoom","changePasswordState","console","log","renderAccessType","onClick","this","handleSubmit","Field","component","Component","Redux","connect","meetings","reduxForm","validate","room_type","permanent_room","access_type","Meeting"],"mappings":"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","file":"static/js/10.52caf62f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://helixlive.herokuapp.com\"\n});\n","export const API_NAME = {\n  SIGN_IN: \"/auth/login\",\n  MEETING: \"/meeting\"\n};\n","import * as ActionType from \"./actionTypes\";\nimport HttpService from \"../../API/HttpService\";\nimport { API_NAME } from \"../../API/ApiPaths\";\nimport history from \"../../history\";\nimport Loader from \"../../components/Shared/Loader/Loader\";\n\nexport const signIn = formValues => async dispatch => {\n  const response = await HttpService.post(API_NAME.SIGN_IN, formValues);\n\n  dispatch({\n    type: ActionType.SIGN_IN,\n    payload: response.data.user\n  });\n\n  if (response.status == 200) {\n    const data = response.data.user;\n    localStorage.setItem(\"id\", data._id);\n    localStorage.setItem(\"name\", data.name);\n    localStorage.setItem(\"email\", data.email);\n    localStorage.setItem(\"phone\", data.phone);\n    localStorage.setItem(\"user_plan\", data.user_plan);\n    localStorage.setItem(\"containerId\", data.containerId);\n\n    // history.push(\"/dashboard\");\n    window.location.href = \"/dashboard\";\n  }\n};\nexport const fetchActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_ACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const fetchInActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_INACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const createMeeting = body => async dispatch => {\n  const response = await HttpService.post(API_NAME.MEETING, body);\n\n  dispatch({\n    type: ActionType.CREATE_MEETING,\n    payload: response.data.data.room\n  });\n\n  const roomId = response.data.data.room.id;\n\n  if (response.status == 200) {\n    history.push(\"/dashboard\");\n    // history.push(`/meeting-room/${roomId}`);\n  }\n};\nexport const fetchMeetingByRoomId = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_MEETING_BY_ID,\n    payload: response.data.data.conference\n  });\n};\n\n// id: 3085824\n// room_type: \"meeting\"\n// room_pin: 219415442\n// name: \"Test\"\n// name_url: \"test\"\n// starts_at: \"2020-04-02T13:17:00+05:30\"\n// ends_at: \"2020-04-02T16:17:00+05:30\"\n// access_type: 1\n// lobby_enabled: true\n// lobby_description: \"\"\n// registration_enabled: 0\n// status: \"active\"\n// timezone: \"Asia/Kolkata\"\n// timezone_offset: 19800\n// paid_enabled: 0\n// automated_enabled: 0\n// created_at: \"2020-04-02T13:17:16+05:30\"\n// updated_at: \"2020-04-02T13:17:16+05:30\"\n// type: 0\n// permanent_room: false\n// ccc: \"2020-04-02 07:47:00\"\n// access_role_hashes: {listener: \"c7a47a6bb0c8b5d9381bc4005e859884\", presenter: \"24829b247bc910dd3f3b2a005e859884\", host: \"39e78d7e8bd20e7eb5d75f005e859884\"}\n// room_url: \"https://uniprojex.clickmeeting.com/test\"\n// phone_presenter_pin: 532917715\n// phone_listener_pin: 323361374\n// embed_room_url: \"https://embed.clickmeeting.com/embed_conference.html?r=1712711113085824\"\n// widgets_hash: \"rDh549\"\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n// import Form from \"./Form\";\nimport { createMeeting } from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nclass CreateMeeting extends Component {\n  onSubmit = form => {\n    form.containerId = localStorage.getItem('containerId')\n    this.props.createMeeting(form);\n  };\n\n  state = {\n    isPassword: false\n  };\n\n  types = [\n    { type: \"Meeting\", value: \"meeting\" },\n    { type: \"Webinar\", value: \"webinar\" }\n  ];\n  permanentTypes = [\n    { type: \"One Time Scheduled\", value: false },\n    // { type: \"Endless Meeting\", value: true }\n  ];\n  accessTypes = [\n    { type: \"Public\", value: 1 },\n    // { type: \"Private\", value: 2 }\n  ];\n\n  renderError = ({ error, touched }) => {\n    if (touched && error)\n      return <small className=\"error-message\">{error}</small>;\n  };\n\n  renderField = props => {\n    return (\n      <div className=\"field\">\n        <label htmlFor={props.input.name}>Meeting Name</label>\n        <input autoComplete=\"off\" {...props.input} />\n        {this.renderError(props.meta)}\n      </div>\n    );\n  };\n  renderPassword = props => {\n    return (\n      <div className=\"field\">\n        <label htmlFor={props.input.name}>Password</label>\n        <input type=\"password\" autoComplete=\"off\" {...props.input} />\n        {this.renderError(props.meta)}\n      </div>\n    );\n  };\n\n  renderRoomType = props => {\n    return (\n      <>\n        <div className=\"field\">\n          <label htmlFor={props.input.name}>Meeting Type</label>\n          <select className=\"ui dropdown\" {...props.input}>\n            <option value=\"\">-select a value-</option>\n            {this.types.map(data => {\n              return (\n                <option key={data.value} value={data.value}>\n                  {data.type}\n                </option>\n              );\n            })}\n          </select>\n          {this.renderError(props.meta)}\n        </div>\n      </>\n    );\n  };\n  renderPermanentRoom = props => {\n    return (\n      <>\n        <div className=\"field\">\n          <label htmlFor={props.input.name}>Meeting Duration</label>\n          <select className=\"ui dropdown\" {...props.input}>\n            <option value=\"\">-select a value-</option>\n            {this.permanentTypes.map(data => {\n              return (\n                <option key={data.value} value={data.value}>\n                  {data.type}\n                </option>\n              );\n            })}\n          </select>\n          {this.renderError(props.meta)}\n        </div>\n      </>\n    );\n  };\n\n  changePasswordState = value => {\n    console.log(value);\n  };\n\n  renderAccessType = props => {\n    return (\n      <>\n        <div className=\"field\">\n          <label htmlFor={props.input.name}>Meeting Visibility</label>\n          <select className=\"ui dropdown\" {...props.input}>\n            <option value=\"\">-select a value-</option>\n            {this.accessTypes.map(data => {\n              return (\n                <option\n                  key={data.value}\n                  onClick={this.changePasswordState}\n                  value={data.value}\n                >\n                  {data.type}\n                  {/* {data.value === 2\n                    ? this.setState({ isPassword: true })\n                    : null} */}\n                </option>\n              );\n            })}\n          </select>\n          {this.renderError(props.meta)}\n        </div>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <br />\n            <h2>Create Meeting</h2>\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n              <div className=\"ui form\">\n                <Field component={this.renderField} name=\"name\" />\n                <Field component={this.renderRoomType} name=\"room_type\" />\n                <Field\n                  component={this.renderPermanentRoom}\n                  name=\"permanent_room\"\n                />\n                <Field component={this.renderAccessType} name=\"access_type\" />\n                {this.state.isPassword ? (\n                  <Field component={this.renderPassword} name=\"password\" />\n                ) : null}\n\n                <button className=\"ui blue button\">Create Meeting</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const error = {};\n  if (!formValues.name) {\n    error.name = \"Must enter a meeting name\";\n  }\n  if (!formValues.room_type) {\n    error.room_type = \"Must enter a meeting type\";\n  }\n  if (!formValues.permanent_room) {\n    error.permanent_room = \"Must enter a meeting duration\";\n  }\n  if (!formValues.access_type) {\n    error.access_type = \"Must enter Meeting visibility\";\n  }\n  return error;\n};\n\nconst mapStateToProps = state => {\n  console.log(state.meetings);\n\n  return {};\n};\nconst Redux = connect(mapStateToProps, { createMeeting })(CreateMeeting);\n\nexport default reduxForm({\n  form: \"MeetingForm\",\n  validate\n})(Redux);\n","import React, { Component } from \"react\";\nimport CreateMeeting from \"../components/CreateMeeting/CreateMeeting\";\nclass Meeting extends Component {\n  render() {\n    return (\n      <div>\n        <CreateMeeting />\n      </div>\n    );\n  }\n}\n\nexport default Meeting;\n"],"sourceRoot":""}