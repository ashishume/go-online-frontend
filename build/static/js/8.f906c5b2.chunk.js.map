{"version":3,"sources":["API/HttpService.jsx","API/ApiPaths.jsx","store/actions/index.jsx","containers/ActiveMeetings/MeetingUI.jsx","components/copyClipboard.jsx","containers/ActiveMeetings/TableUI.jsx","containers/ActiveMeetings/ActiveMeetings.jsx","containers/Dashboard/Dashboard.jsx"],"names":["axios","create","baseURL","API_NAME","signIn","formValues","dispatch","a","HttpService","post","response","type","ActionType","payload","data","user","status","localStorage","setItem","_id","name","email","phone","user_plan","containerId","window","location","href","fetchActiveMeetings","query","get","params","fetchInActiveMeetings","createMeeting","body","room","id","history","push","fetchMeetingByRoomId","conference","MeetingsUI","props","panes","menuItem","key","icon","content","render","Tab","Pane","activeContent","inactiveContent","Copy","state","value","copied","className","this","onChange","target","setState","text","onCopy","Component","TableUI","Table","celled","Header","Row","Labels","map","label","HeaderCell","Body","meetings","startDate","Date","starts_at","toLocaleDateString","endDate","ends_at","startTime","toLocaleTimeString","endTime","Cell","room_type","room_pin","timezone","room_url","to","ActiveMeetings","loader","renderActiveMeetings","activeMeetings","length","renderInactiveMeetings","inactiveMeetings","active","getItem","inactive","title","connect","Dashboard"],"mappings":"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","file":"static/js/8.f906c5b2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://helixlive.herokuapp.com\"\n});\n","export const API_NAME = {\n  SIGN_IN: \"/auth/login\",\n  MEETING: \"/meeting\"\n};\n","import * as ActionType from \"./actionTypes\";\nimport HttpService from \"../../API/HttpService\";\nimport { API_NAME } from \"../../API/ApiPaths\";\nimport history from \"../../history\";\nimport Loader from \"../../components/Shared/Loader/Loader\";\n\nexport const signIn = formValues => async dispatch => {\n  const response = await HttpService.post(API_NAME.SIGN_IN, formValues);\n\n  dispatch({\n    type: ActionType.SIGN_IN,\n    payload: response.data.user\n  });\n\n  if (response.status == 200) {\n    const data = response.data.user;\n    localStorage.setItem(\"id\", data._id);\n    localStorage.setItem(\"name\", data.name);\n    localStorage.setItem(\"email\", data.email);\n    localStorage.setItem(\"phone\", data.phone);\n    localStorage.setItem(\"user_plan\", data.user_plan);\n    localStorage.setItem(\"containerId\", data.containerId);\n\n    // history.push(\"/dashboard\");\n    window.location.href = \"/dashboard\";\n  }\n};\nexport const fetchActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_ACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const fetchInActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_INACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const createMeeting = body => async dispatch => {\n  const response = await HttpService.post(API_NAME.MEETING, body);\n\n  dispatch({\n    type: ActionType.CREATE_MEETING,\n    payload: response.data.data.room\n  });\n\n  const roomId = response.data.data.room.id;\n\n  if (response.status == 200) {\n    history.push(\"/dashboard\");\n    // history.push(`/meeting-room/${roomId}`);\n  }\n};\nexport const fetchMeetingByRoomId = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_MEETING_BY_ID,\n    payload: response.data.data.conference\n  });\n};\n\n// id: 3085824\n// room_type: \"meeting\"\n// room_pin: 219415442\n// name: \"Test\"\n// name_url: \"test\"\n// starts_at: \"2020-04-02T13:17:00+05:30\"\n// ends_at: \"2020-04-02T16:17:00+05:30\"\n// access_type: 1\n// lobby_enabled: true\n// lobby_description: \"\"\n// registration_enabled: 0\n// status: \"active\"\n// timezone: \"Asia/Kolkata\"\n// timezone_offset: 19800\n// paid_enabled: 0\n// automated_enabled: 0\n// created_at: \"2020-04-02T13:17:16+05:30\"\n// updated_at: \"2020-04-02T13:17:16+05:30\"\n// type: 0\n// permanent_room: false\n// ccc: \"2020-04-02 07:47:00\"\n// access_role_hashes: {listener: \"c7a47a6bb0c8b5d9381bc4005e859884\", presenter: \"24829b247bc910dd3f3b2a005e859884\", host: \"39e78d7e8bd20e7eb5d75f005e859884\"}\n// room_url: \"https://uniprojex.clickmeeting.com/test\"\n// phone_presenter_pin: 532917715\n// phone_listener_pin: 323361374\n// embed_room_url: \"https://embed.clickmeeting.com/embed_conference.html?r=1712711113085824\"\n// widgets_hash: \"rDh549\"\n","import React from \"react\";\nimport { Label, Menu, Tab } from \"semantic-ui-react\";\n\nconst MeetingsUI = props => {\n  const panes = [\n    {\n      menuItem: { key: \"Active\", icon: \"video\", content: \"Active\" },\n      render: () => <Tab.Pane>{props.activeContent}</Tab.Pane>\n    },\n    {\n      menuItem: {\n        key: \"Inactive\",\n        icon: \"calendar check\",\n        content: \"Inactive\"\n      },\n      render: () => <Tab.Pane>{props.inactiveContent}</Tab.Pane>\n    }\n  ];\n  return <Tab panes={panes} />;\n};\n\nexport default MeetingsUI;\n","import React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nclass Copy extends Component {\n  state = {\n    value: \"\",\n    copied: false\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui input\">\n          <input\n            value={this.props.value}\n            onChange={({ target: { value } }) =>\n              this.setState({ value, copied: false })\n            }\n          />\n          <CopyToClipboard\n            text={this.props.value}\n            onCopy={() => this.setState({ copied: true })}\n          >\n            <button className=\"ui mini button\">Copy</button>\n          </CopyToClipboard>\n        </div>\n\n        {this.state.copied ? (\n          <div className=\"ui mini message\">Copied</div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Copy;\n","import React from \"react\";\n\nimport { Table } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Copy from \"../../components/copyClipboard\";\nconst TableUI = props => {\n  return (\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          {props.Labels.map(label => {\n            return <Table.HeaderCell key={label}>{label}</Table.HeaderCell>;\n          })}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {props.meetings.map(value => {\n          const startDate = new Date(value.starts_at).toLocaleDateString();\n          const endDate = new Date(value.ends_at).toLocaleDateString();\n          const startTime = new Date(value.starts_at).toLocaleTimeString();\n          const endTime = new Date(value.ends_at).toLocaleTimeString();\n          return (\n            <Table.Row key={value.id}>\n              <Table.Cell>{value.id}</Table.Cell>\n              <Table.Cell>{value.room_type}</Table.Cell>\n              <Table.Cell>{value.name}</Table.Cell>\n              <Table.Cell>{value.room_pin}</Table.Cell>\n              <Table.Cell>\n                {startDate}&nbsp;&nbsp;&nbsp;{startTime}\n              </Table.Cell>\n              <Table.Cell>\n                {endDate}&nbsp;&nbsp;&nbsp;{endTime}\n              </Table.Cell>\n              <Table.Cell>{value.timezone}</Table.Cell>\n              <Table.Cell>\n                <Copy value={value.room_url} />\n              </Table.Cell>\n              <Table.Cell>\n                {value.status == \"active\" ? (\n                  <Link to={`/meeting-room/${value.id}`}>Go to Meeting</Link>\n                ) : (\n                  value.status\n                )}\n              </Table.Cell>\n            </Table.Row>\n          );\n        }) //loop end\n        }\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default TableUI;\n","import React, { Component } from \"react\";\nimport ActiveMeetingsUI from \"./MeetingUI\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchActiveMeetings,\n  fetchInActiveMeetings\n} from \"../../store/actions/index\";\nimport TableUI from \"./TableUI\";\nclass ActiveMeetings extends Component {\n  state = {\n    loader: false\n  };\n  componentDidMount() {\n    const active = {\n      containerId: localStorage.getItem(\"containerId\"),\n      id: \"active\"\n    };\n    this.props.fetchActiveMeetings(active);\n    const inactive = {\n      containerId: localStorage.getItem(\"containerId\"),\n      id: \"inactive\"\n    };\n    this.props.fetchInActiveMeetings(inactive);\n  }\n\n  Labels = [\n    \"Meeting Id\",\n    \"Room Type\",\n    \"Meeting Name\",\n    \"Room PIN\",\n    \"Start Date/Time\",\n    \"Ended Date/Time\",\n    \"Timezone\",\n    \"Meeting URL\",\n    \"Status\"\n  ];\n\n  renderActiveMeetings = () => {\n    if (!this.props.activeMeetings.length)\n      return <p>No active meetings found</p>;\n    return (\n      <TableUI Labels={this.Labels} meetings={this.props.activeMeetings} />\n    );\n  };\n\n  renderInactiveMeetings = () => {\n    if (!this.props.inactiveMeetings.length)\n      return <p>No inactive meetings found</p>;\n    return (\n      <TableUI Labels={this.Labels} meetings={this.props.inactiveMeetings} />\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <ActiveMeetingsUI\n          title=\"TabsName\"\n          activeContent={this.renderActiveMeetings()}\n          inactiveContent={this.renderInactiveMeetings()}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeMeetings: state.meetings.activeMeetings,\n    inactiveMeetings: state.meetings.inactiveMeetings\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchActiveMeetings,\n  fetchInActiveMeetings\n})(ActiveMeetings);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ActiveMeetings from \"../ActiveMeetings/ActiveMeetings\";\nimport './Dashboard.css'\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <span className=\"heading\">\n        Dashboard\n        </span>\n        <ActiveMeetings />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}