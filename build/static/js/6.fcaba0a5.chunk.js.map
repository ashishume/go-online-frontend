{"version":3,"sources":["API/HttpService.jsx","API/ApiPaths.jsx","store/actions/index.jsx","components/Footer/Footer.jsx","containers/Email/Email.jsx","containers/Login/Login.jsx"],"names":["axios","create","baseURL","API_NAME","signIn","formValues","dispatch","a","HttpService","post","response","type","ActionType","payload","data","user","status","localStorage","setItem","_id","name","email","phone","user_plan","containerId","window","location","href","fetchActiveMeetings","query","get","params","fetchInActiveMeetings","createMeeting","body","room","id","history","push","fetchMeetingByRoomId","conference","Component","Email","URL","target","Login","onSubmit","props","renderError","error","touched","className","renderField","htmlFor","input","autoComplete","meta","renderPassword","getItem","Fragment","style","textAlign","to","this","handleSubmit","Field","component","redux","connect","reduxForm","form","validate","password","room_type"],"mappings":"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","file":"static/js/6.fcaba0a5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://helixlive.herokuapp.com\"\n});\n","export const API_NAME = {\n  SIGN_IN: \"/auth/login\",\n  MEETING: \"/meeting\"\n};\n","import * as ActionType from \"./actionTypes\";\nimport HttpService from \"../../API/HttpService\";\nimport { API_NAME } from \"../../API/ApiPaths\";\nimport history from \"../../history\";\nimport Loader from \"../../components/Shared/Loader/Loader\";\n\nexport const signIn = formValues => async dispatch => {\n  const response = await HttpService.post(API_NAME.SIGN_IN, formValues);\n\n  dispatch({\n    type: ActionType.SIGN_IN,\n    payload: response.data.user\n  });\n\n  if (response.status == 200) {\n    const data = response.data.user;\n    localStorage.setItem(\"id\", data._id);\n    localStorage.setItem(\"name\", data.name);\n    localStorage.setItem(\"email\", data.email);\n    localStorage.setItem(\"phone\", data.phone);\n    localStorage.setItem(\"user_plan\", data.user_plan);\n    localStorage.setItem(\"containerId\", data.containerId);\n\n    // history.push(\"/dashboard\");\n    window.location.href = \"/dashboard\";\n  }\n};\nexport const fetchActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_ACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const fetchInActiveMeetings = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_INACTIVE_MEETINGS,\n    payload: response.data.data\n  });\n};\nexport const createMeeting = body => async dispatch => {\n  const response = await HttpService.post(API_NAME.MEETING, body);\n\n  dispatch({\n    type: ActionType.CREATE_MEETING,\n    payload: response.data.data.room\n  });\n\n  const roomId = response.data.data.room.id;\n\n  if (response.status == 200) {\n    history.push(\"/dashboard\");\n    // history.push(`/meeting-room/${roomId}`);\n  }\n};\nexport const fetchMeetingByRoomId = query => async dispatch => {\n  const response = await HttpService.get(API_NAME.MEETING, {\n    params: query\n  });\n\n  dispatch({\n    type: ActionType.FETCH_MEETING_BY_ID,\n    payload: response.data.data.conference\n  });\n};\n\n// id: 3085824\n// room_type: \"meeting\"\n// room_pin: 219415442\n// name: \"Test\"\n// name_url: \"test\"\n// starts_at: \"2020-04-02T13:17:00+05:30\"\n// ends_at: \"2020-04-02T16:17:00+05:30\"\n// access_type: 1\n// lobby_enabled: true\n// lobby_description: \"\"\n// registration_enabled: 0\n// status: \"active\"\n// timezone: \"Asia/Kolkata\"\n// timezone_offset: 19800\n// paid_enabled: 0\n// automated_enabled: 0\n// created_at: \"2020-04-02T13:17:16+05:30\"\n// updated_at: \"2020-04-02T13:17:16+05:30\"\n// type: 0\n// permanent_room: false\n// ccc: \"2020-04-02 07:47:00\"\n// access_role_hashes: {listener: \"c7a47a6bb0c8b5d9381bc4005e859884\", presenter: \"24829b247bc910dd3f3b2a005e859884\", host: \"39e78d7e8bd20e7eb5d75f005e859884\"}\n// room_url: \"https://uniprojex.clickmeeting.com/test\"\n// phone_presenter_pin: 532917715\n// phone_listener_pin: 323361374\n// embed_room_url: \"https://embed.clickmeeting.com/embed_conference.html?r=1712711113085824\"\n// widgets_hash: \"rDh549\"\n","import React, { Component } from \"react\";\nimport './Footer.css';\nclass Footer extends Component {\n  render() {\n      return (\n        <div>\n          <div class=\"seven wide column\">\n            <h4 class=\"ui inverted header\">HelixLive</h4>\n            <p>\n              Created by{\" \"}\n              <a\n                className=\"link\"\n                href=\"https://www.linkedin.com/in/ashishume/\"\n                target=\"_blank\"\n              >\n                <b>Ashish Debnath</b>\n              </a>\n            </p>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Email extends Component {\n  render() {\n    const body = \"I want a new Connection\";\n    const subject = \"Regarding new connection\";\n\n    const URL = `https://mail.google.com/mail/?view=cm&fs=1&to=ashishume@gmail.com&cc=gauravclb96@gmail.com&su=${subject}&body=${body}`;\n\n    return (\n      <div>\n        <br />\n        <span>Need new connection?</span>&nbsp;\n        <a href={URL} target=\"_blank\">\n          Contact us\n        </a>\n      </div>\n    );\n  }\n}\nexport default Email;\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport \"./Login.css\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/index\";\nimport history from \"../../history\";\nimport Email from \"../Email/Email\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../../components/Footer/Footer\";\nclass Login extends Component {\n  onSubmit = formValues => {\n    this.props.signIn(formValues);\n  };\n\n  renderError = ({ error, touched }) => {\n    if (touched && error)\n      return <small className=\"error-message\">{error}</small>;\n  };\n\n  renderField = props => {\n    return (\n      <div className=\"field\">\n        <label htmlFor={props.input.name}>Meeting Name</label>\n        <input autoComplete=\"off\" {...props.input} />\n        {this.renderError(props.meta)}\n      </div>\n    );\n  };\n  renderPassword = props => {\n    return (\n      <div className=\"field\">\n        <label htmlFor={props.input.name}>Password</label>\n        <input type=\"password\" autoComplete=\"off\" {...props.input} />\n        {this.renderError(props.meta)}\n      </div>\n    );\n  };\n\n  render() {\n    if (localStorage.getItem(\"id\")) {\n      history.push(\"/dashboard\");\n    }\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <br />\n              <div className=\"inner-container\">\n                <div className=\"ui cards\">\n                  <div className=\"card\">\n                    <div className=\"content\">\n                      <div style={{ textAlign: \"center\" }}>\n                        <Link to=\"/\">Back Home</Link>\n                      </div>\n                      <h2>Login</h2>\n                      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                        <div className=\"ui form\">\n                          <Field component={this.renderField} name=\"email\" />\n                          <Field\n                            component={this.renderPassword}\n                            name=\"password\"\n                          />\n\n                          <button className=\"fluid ui green button\">\n                            Login\n                          </button>\n\n                          <Email />\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"footer-container\">\n          <span className=\"footer\">\n            <p>\n              Created by{\" \"}\n              <a\n                className=\"link\"\n                href=\"https://www.linkedin.com/in/ashishume/\"\n                target=\"_blank\"\n              >\n                <b>Ashish Debnath</b>\n              </a>\n            </p>\n          </span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const error = {};\n  if (!formValues.email) {\n    error.name = \"Email is required\";\n  }\n  if (!formValues.password) {\n    error.room_type = \"Password is required\";\n  }\n\n  return error;\n};\n\nconst redux = connect(\"\", { signIn })(Login);\n\nexport default reduxForm({\n  form: \"LoginForm\",\n  validate\n})(redux);\n"],"sourceRoot":""}